// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.21.12
// source: xla/service/metrics.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines compilation stages for which metrics are collected.
type CompilationLogEntry_CompilationStage int32

const (
	CompilationLogEntry_UNSPECIFIED     CompilationLogEntry_CompilationStage = 0
	CompilationLogEntry_END_TO_END      CompilationLogEntry_CompilationStage = 1
	CompilationLogEntry_HLO_PASSES      CompilationLogEntry_CompilationStage = 2
	CompilationLogEntry_CODE_GENERATION CompilationLogEntry_CompilationStage = 3
	CompilationLogEntry_BACKEND_PASSES  CompilationLogEntry_CompilationStage = 4
)

// Enum value maps for CompilationLogEntry_CompilationStage.
var (
	CompilationLogEntry_CompilationStage_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "END_TO_END",
		2: "HLO_PASSES",
		3: "CODE_GENERATION",
		4: "BACKEND_PASSES",
	}
	CompilationLogEntry_CompilationStage_value = map[string]int32{
		"UNSPECIFIED":     0,
		"END_TO_END":      1,
		"HLO_PASSES":      2,
		"CODE_GENERATION": 3,
		"BACKEND_PASSES":  4,
	}
)

func (x CompilationLogEntry_CompilationStage) Enum() *CompilationLogEntry_CompilationStage {
	p := new(CompilationLogEntry_CompilationStage)
	*p = x
	return p
}

func (x CompilationLogEntry_CompilationStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompilationLogEntry_CompilationStage) Descriptor() protoreflect.EnumDescriptor {
	return file_xla_service_metrics_proto_enumTypes[0].Descriptor()
}

func (CompilationLogEntry_CompilationStage) Type() protoreflect.EnumType {
	return &file_xla_service_metrics_proto_enumTypes[0]
}

func (x CompilationLogEntry_CompilationStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompilationLogEntry_CompilationStage.Descriptor instead.
func (CompilationLogEntry_CompilationStage) EnumDescriptor() ([]byte, []int) {
	return file_xla_service_metrics_proto_rawDescGZIP(), []int{4, 0}
}

// Defines generic pass stats.
type KeyValueMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         int64                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValueMetric) Reset() {
	*x = KeyValueMetric{}
	mi := &file_xla_service_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValueMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValueMetric) ProtoMessage() {}

func (x *KeyValueMetric) ProtoReflect() protoreflect.Message {
	mi := &file_xla_service_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValueMetric.ProtoReflect.Descriptor instead.
func (*KeyValueMetric) Descriptor() ([]byte, []int) {
	return file_xla_service_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValueMetric) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValueMetric) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// Defines pass specific metrics.
type PassMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique ID of the module on which the pass was run.
	ModuleId uint64 `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// The name of the pass.
	PassName string `protobuf:"bytes,2,opt,name=pass_name,json=passName,proto3" json:"pass_name,omitempty"`
	// Duration of the pass.
	PassDuration *durationpb.Duration `protobuf:"bytes,3,opt,name=pass_duration,json=passDuration,proto3" json:"pass_duration,omitempty"`
	// Custom pass metrics. Used for cases where a more complex structure
	// is needed than a simple key - value pair (via generic metric).
	// This is kept opaque, via `google.protobuf.Any`, in order to
	// decouple pass agnostic compilation logs from possibly proprietary compiler
	// passes.
	CustomMetrics *anypb.Any `protobuf:"bytes,4,opt,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty"`
	// Used to log any number of generic metrics per pass.
	// Encapsulates simple metrics regarding a pass via a key - value pair.
	// For more complex metrics for a pass, see custom_metric above.
	KvMetrics     []*KeyValueMetric `protobuf:"bytes,5,rep,name=kv_metrics,json=kvMetrics,proto3" json:"kv_metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PassMetrics) Reset() {
	*x = PassMetrics{}
	mi := &file_xla_service_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PassMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PassMetrics) ProtoMessage() {}

func (x *PassMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_xla_service_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PassMetrics.ProtoReflect.Descriptor instead.
func (*PassMetrics) Descriptor() ([]byte, []int) {
	return file_xla_service_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *PassMetrics) GetModuleId() uint64 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *PassMetrics) GetPassName() string {
	if x != nil {
		return x.PassName
	}
	return ""
}

func (x *PassMetrics) GetPassDuration() *durationpb.Duration {
	if x != nil {
		return x.PassDuration
	}
	return nil
}

func (x *PassMetrics) GetCustomMetrics() *anypb.Any {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

func (x *PassMetrics) GetKvMetrics() []*KeyValueMetric {
	if x != nil {
		return x.KvMetrics
	}
	return nil
}

// Defines compilation job information.
type JobInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the job running compilation.
	Name *string `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// Cell in which the job is running.
	Cell *string `protobuf:"bytes,2,opt,name=cell,proto3,oneof" json:"cell,omitempty"`
	// User running the job.
	User *string `protobuf:"bytes,3,opt,name=user,proto3,oneof" json:"user,omitempty"`
	// Unique id when combined with user and cell field.
	Uid *int64 `protobuf:"varint,4,opt,name=uid,proto3,oneof" json:"uid,omitempty"`
	// Task index, which will not change across job restarts.
	TaskId *int64 `protobuf:"varint,5,opt,name=task_id,json=taskId,proto3,oneof" json:"task_id,omitempty"`
	// Task unique id, which may change across job restarts.
	TaskUid       *int64 `protobuf:"varint,6,opt,name=task_uid,json=taskUid,proto3,oneof" json:"task_uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobInfo) Reset() {
	*x = JobInfo{}
	mi := &file_xla_service_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfo) ProtoMessage() {}

func (x *JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_xla_service_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfo.ProtoReflect.Descriptor instead.
func (*JobInfo) Descriptor() ([]byte, []int) {
	return file_xla_service_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *JobInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *JobInfo) GetCell() string {
	if x != nil && x.Cell != nil {
		return *x.Cell
	}
	return ""
}

func (x *JobInfo) GetUser() string {
	if x != nil && x.User != nil {
		return *x.User
	}
	return ""
}

func (x *JobInfo) GetUid() int64 {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return 0
}

func (x *JobInfo) GetTaskId() int64 {
	if x != nil && x.TaskId != nil {
		return *x.TaskId
	}
	return 0
}

func (x *JobInfo) GetTaskUid() int64 {
	if x != nil && x.TaskUid != nil {
		return *x.TaskUid
	}
	return 0
}

// Key-Value pair for metrics metadata tags.
type TagMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagMetric) Reset() {
	*x = TagMetric{}
	mi := &file_xla_service_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagMetric) ProtoMessage() {}

func (x *TagMetric) ProtoReflect() protoreflect.Message {
	mi := &file_xla_service_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagMetric.ProtoReflect.Descriptor instead.
func (*TagMetric) Descriptor() ([]byte, []int) {
	return file_xla_service_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *TagMetric) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TagMetric) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Defines XLA compilation metrics.
type CompilationLogEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Time when the event captured by this log entry occurred.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Compilation stage recorded by this log entry.
	Stage CompilationLogEntry_CompilationStage `protobuf:"varint,2,opt,name=stage,proto3,enum=xla.CompilationLogEntry_CompilationStage" json:"stage,omitempty"`
	// Duration of the given compilation stage.
	Duration *durationpb.Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// Task index from which this log entry was recorded or
	// -1 if the task index could not be fetched. In the case task_index is not
	// equal to -1, it is guaranteed to match the task_id in job_info.
	TaskIndex int32 `protobuf:"varint,4,opt,name=task_index,json=taskIndex,proto3" json:"task_index,omitempty"`
	// Pass specific metrics.
	PassMetrics []*PassMetrics `protobuf:"bytes,5,rep,name=pass_metrics,json=passMetrics,proto3" json:"pass_metrics,omitempty"`
	// IDs of modules on which the compilation stage was run.
	ModuleIds []uint64 `protobuf:"varint,6,rep,packed,name=module_ids,json=moduleIds,proto3" json:"module_ids,omitempty"`
	// Job information.
	JobInfo *JobInfo `protobuf:"bytes,7,opt,name=job_info,json=jobInfo,proto3" json:"job_info,omitempty"`
	// HLO module name.
	HloModuleName string `protobuf:"bytes,8,opt,name=hlo_module_name,json=hloModuleName,proto3" json:"hlo_module_name,omitempty"`
	// Metadata tags for identifying/filtering jobs
	Tag           []*TagMetric `protobuf:"bytes,9,rep,name=tag,proto3" json:"tag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompilationLogEntry) Reset() {
	*x = CompilationLogEntry{}
	mi := &file_xla_service_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompilationLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompilationLogEntry) ProtoMessage() {}

func (x *CompilationLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_xla_service_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompilationLogEntry.ProtoReflect.Descriptor instead.
func (*CompilationLogEntry) Descriptor() ([]byte, []int) {
	return file_xla_service_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *CompilationLogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CompilationLogEntry) GetStage() CompilationLogEntry_CompilationStage {
	if x != nil {
		return x.Stage
	}
	return CompilationLogEntry_UNSPECIFIED
}

func (x *CompilationLogEntry) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *CompilationLogEntry) GetTaskIndex() int32 {
	if x != nil {
		return x.TaskIndex
	}
	return 0
}

func (x *CompilationLogEntry) GetPassMetrics() []*PassMetrics {
	if x != nil {
		return x.PassMetrics
	}
	return nil
}

func (x *CompilationLogEntry) GetModuleIds() []uint64 {
	if x != nil {
		return x.ModuleIds
	}
	return nil
}

func (x *CompilationLogEntry) GetJobInfo() *JobInfo {
	if x != nil {
		return x.JobInfo
	}
	return nil
}

func (x *CompilationLogEntry) GetHloModuleName() string {
	if x != nil {
		return x.HloModuleName
	}
	return ""
}

func (x *CompilationLogEntry) GetTag() []*TagMetric {
	if x != nil {
		return x.Tag
	}
	return nil
}

var File_xla_service_metrics_proto protoreflect.FileDescriptor

var file_xla_service_metrics_proto_rawDesc = string([]byte{
	0x0a, 0x19, 0x78, 0x6c, 0x61, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x78, 0x6c, 0x61,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x0e,
	0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x73, 0x73, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3b, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x32, 0x0a,
	0x0a, 0x6b, 0x76, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x09, 0x6b, 0x76, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x22, 0xe5, 0x01, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x65, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x03, 0x52, 0x03, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x05, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x55, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x75, 0x69, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x75, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x09, 0x54, 0x61, 0x67,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9b,
	0x04, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f,
	0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x29, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x33, 0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x5f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x78, 0x6c, 0x61, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x0b, 0x70, 0x61, 0x73, 0x73, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x09, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x6a,
	0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x78, 0x6c, 0x61, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6a, 0x6f, 0x62,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x6c, 0x6f, 0x5f, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68,
	0x6c, 0x6f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x78, 0x6c, 0x61, 0x2e,
	0x54, 0x61, 0x67, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x6c,
	0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x45, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x4c, 0x4f, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45,
	0x53, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x41, 0x43, 0x4b,
	0x45, 0x4e, 0x44, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x53, 0x10, 0x04, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_xla_service_metrics_proto_rawDescOnce sync.Once
	file_xla_service_metrics_proto_rawDescData []byte
)

func file_xla_service_metrics_proto_rawDescGZIP() []byte {
	file_xla_service_metrics_proto_rawDescOnce.Do(func() {
		file_xla_service_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xla_service_metrics_proto_rawDesc), len(file_xla_service_metrics_proto_rawDesc)))
	})
	return file_xla_service_metrics_proto_rawDescData
}

var file_xla_service_metrics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_xla_service_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_xla_service_metrics_proto_goTypes = []any{
	(CompilationLogEntry_CompilationStage)(0), // 0: xla.CompilationLogEntry.CompilationStage
	(*KeyValueMetric)(nil),                    // 1: xla.KeyValueMetric
	(*PassMetrics)(nil),                       // 2: xla.PassMetrics
	(*JobInfo)(nil),                           // 3: xla.JobInfo
	(*TagMetric)(nil),                         // 4: xla.TagMetric
	(*CompilationLogEntry)(nil),               // 5: xla.CompilationLogEntry
	(*durationpb.Duration)(nil),               // 6: google.protobuf.Duration
	(*anypb.Any)(nil),                         // 7: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),             // 8: google.protobuf.Timestamp
}
var file_xla_service_metrics_proto_depIdxs = []int32{
	6, // 0: xla.PassMetrics.pass_duration:type_name -> google.protobuf.Duration
	7, // 1: xla.PassMetrics.custom_metrics:type_name -> google.protobuf.Any
	1, // 2: xla.PassMetrics.kv_metrics:type_name -> xla.KeyValueMetric
	8, // 3: xla.CompilationLogEntry.timestamp:type_name -> google.protobuf.Timestamp
	0, // 4: xla.CompilationLogEntry.stage:type_name -> xla.CompilationLogEntry.CompilationStage
	6, // 5: xla.CompilationLogEntry.duration:type_name -> google.protobuf.Duration
	2, // 6: xla.CompilationLogEntry.pass_metrics:type_name -> xla.PassMetrics
	3, // 7: xla.CompilationLogEntry.job_info:type_name -> xla.JobInfo
	4, // 8: xla.CompilationLogEntry.tag:type_name -> xla.TagMetric
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_xla_service_metrics_proto_init() }
func file_xla_service_metrics_proto_init() {
	if File_xla_service_metrics_proto != nil {
		return
	}
	file_xla_service_metrics_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xla_service_metrics_proto_rawDesc), len(file_xla_service_metrics_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xla_service_metrics_proto_goTypes,
		DependencyIndexes: file_xla_service_metrics_proto_depIdxs,
		EnumInfos:         file_xla_service_metrics_proto_enumTypes,
		MessageInfos:      file_xla_service_metrics_proto_msgTypes,
	}.Build()
	File_xla_service_metrics_proto = out.File
	file_xla_service_metrics_proto_goTypes = nil
	file_xla_service_metrics_proto_depIdxs = nil
}
